{"version":3,"sources":["reportWebVitals.js","Contexts.js","utils.js","WebApi.js","components/NewPost.js","components/Panel.js","components/Header.js","Layout.js","components/Post.js","components/Toggle.js","components/DarkModeToggle.js","components/ToolBox.js","images/avatar.png","components/Posts.js","components/App.js","pages/Login.js","pages/Register.js","pages/Notfound.js","components/EditModal.js","pages/PostPage.js","Routers.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AuthContext","createContext","LoadingContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getMe","fetch","headers","authorization","res","json","NewPost","handleClose","useState","title","setTitle","content","setContent","errorMessage","setErrorMessage","useContext","setIsLoading","isLoading","history","useHistory","className","onSubmit","e","preventDefault","method","body","JSON","stringify","addPost","data","ok","message","toString","push","type","name","onChange","target","value","onClick","Panel","isPanel","setIsPanel","true","false","Header","user","setUser","to","Layout","props","children","Post","post","Date","createdAt","toLocaleString","id","Toggle","checked","htmlFor","DarkModeToggle","darkMode","useDarkMode","disable","toggle","enable","ToolBox","Posts","posts","setPosts","useEffect","axios","get","src","avatar","alt","href","map","App","Login","username","setUsername","password","setPassword","login","placeholder","Register","nickname","setNickname","register","NotFound","EditModal","isEdit","editPost","aria-label","defaultValue","slug","setIsEdit","delete","PostPage","setPost","useParams","Routers","Provider","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63f77e54.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createContext } from 'react';\r\nexport const AuthContext = createContext(null);\r\nexport const LoadingContext = createContext(null);\r\n","const TOKEN_NAME = 'token';\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import axios from 'axios';\r\nimport { getAuthToken } from 'utils';\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me';\r\n\r\n// 獲取所有文章\r\nexport const getAllPosts = () => {\r\n  return axios\r\n    .get(`${BASE_URL}/posts?_sort=createdAt&_order=desc`)\r\n    .then((res) => res.data);\r\n};\r\n\r\n// 獲取單篇文章\r\nexport const getPostInfo = (id) => {\r\n  return axios\r\n    .get(`${BASE_URL}/posts/${id}?_expand=user`)\r\n    .then((res) => res.data);\r\n};\r\n\r\n// 刪除文章\r\nexport const deletePost = (id) => {\r\n  return axios.delete(`${BASE_URL}/posts/${id}`).then((res) => res.data);\r\n};\r\n\r\n// 編輯文章\r\nexport const editPost = (id, title, content) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body: content,\r\n    }),\r\n  }).then((res) => {\r\n    return res.json();\r\n  });\r\n};\r\n\r\n// 註冊\r\nexport const register = (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\n// 登入\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\n// 身分驗證\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\n// 新增文章\r\nexport const addPost = (title, content) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body: content,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n","import { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { addPost } from 'WebApi';\r\nimport { LoadingContext } from 'Contexts';\r\n\r\nexport default function NewPost({ handleClose }) {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\r\n  const history = useHistory();\r\n\r\n  const handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    addPost(title, content).then((data) => {\r\n      if (data.ok === 0) {\r\n        return setErrorMessage(data.message.toString());\r\n      }\r\n      setIsLoading(false);\r\n      handleClose(e);\r\n      history.push('/');\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"new-post\">\r\n      <p className=\"title has-text-centered\">New Post</p>\r\n      <form className=\"new-post-form\" onSubmit={handleSubmit}>\r\n        <div className=\"field\">\r\n          <div className=\"control\">\r\n            <label className=\"label left\">Title</label>\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={handleTitleChange}\r\n              value={title}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"field\">\r\n          <div className=\"control\">\r\n            <label className=\"label left\">Content</label>\r\n            <textarea\r\n              className=\"textarea\"\r\n              name=\"content\"\r\n              onChange={handleContentChange}\r\n              value={content}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n        <div className=\"field is-grouped is-grouped-centered\">\r\n          <div className=\"control\">\r\n            <button className=\"button is-primary\">Submit</button>\r\n          </div>\r\n          <div className=\"control\">\r\n            <button className=\"button\" type=\"button\" onClick={handleClose}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {errorMessage && <div className=\"post-errorMessage\">欄位不得為空</div>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import NewPost from 'components/NewPost';\r\n\r\nexport default function Panel({ isPanel, setIsPanel }) {\r\n  const _class = {\r\n    true: 'panel-wrapper active',\r\n    false: 'panel-wrapper',\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    e.preventDefault();\r\n    setIsPanel(false);\r\n  };\r\n\r\n  return (\r\n    <div className={_class[isPanel]}>\r\n      <div className=\"over-layer\" onClick={handleClose}></div>\r\n      <div className=\"panel\">\r\n        <div className=\"head\">\r\n          <span className=\"close\" onClick={handleClose}>\r\n            x\r\n          </span>\r\n          <NewPost handleClose={handleClose} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { AuthContext, LoadingContext } from 'Contexts';\r\nimport { setAuthToken } from 'utils';\r\nimport Panel from 'components/Panel';\r\n\r\nexport default function Header() {\r\n  const { user, setUser } = useContext(AuthContext);\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\r\n  const [isPanel, setIsPanel] = useState(false);\r\n  const history = useHistory();\r\n\r\n  // 登出\r\n  const handleLogout = (e) => {\r\n    setAuthToken('');\r\n    setUser(null);\r\n    setIsLoading(true);\r\n    history.push('/');\r\n    setIsLoading(false);\r\n  };\r\n  // 打開 panel\r\n  const handleOpen = (e) => {\r\n    e.preventDefault();\r\n    setIsPanel(true);\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"start\">\r\n          <Link to=\"/\">Home</Link>\r\n        </div>\r\n        <div className=\"end\">\r\n          {!user && <Link to=\"/login\">登入</Link>}\r\n          {!user && <Link to=\"/register\">註冊</Link>}\r\n          {user && <Link onClick={handleLogout}>登出</Link>}\r\n          {user && <Link onClick={handleOpen}>發佈文章</Link>}\r\n        </div>\r\n      </div>\r\n      {isPanel && <Panel isPanel={isPanel} setIsPanel={setIsPanel} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Header from 'components/Header';\r\n\r\nexport default function Layout(props) {\r\n  return (\r\n    <>\r\n      <Header />\r\n      {props.children}\r\n    </>\r\n  );\r\n}\r\n","import { Link } from 'react-router-dom';\r\n\r\nexport default function Post({ post }) {\r\n  return (\r\n    <div className=\"article\">\r\n      <h5>{new Date(post.createdAt).toLocaleString()}</h5>\r\n      <Link className=\"title\" to={`/posts/${post.id}`}>\r\n        {post.title}\r\n      </Link>\r\n      <p className=\"content\">{post.body}</p>\r\n      <Link className=\"read-more \" to={`/posts/${post.id}`}>\r\n        Read more\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst Toggle = ({ checked, onChange }) => (\r\n  <span className=\"toggle-control\">\r\n    <input\r\n      className=\"dmcheck\"\r\n      type=\"checkbox\"\r\n      checked={checked}\r\n      onChange={onChange}\r\n      id=\"dmcheck\"\r\n    />\r\n    <label htmlFor=\"dmcheck\" />\r\n  </span>\r\n);\r\n\r\nexport default Toggle;\r\n","import React from 'react';\r\nimport Toggle from 'components/Toggle';\r\nimport useDarkMode from 'use-dark-mode';\r\n\r\nconst DarkModeToggle = () => {\r\n  const darkMode = useDarkMode(false);\r\n\r\n  return (\r\n    <div className=\"dark-mode-toggle\">\r\n      <button type=\"button\" onClick={darkMode.disable}>\r\n        ☀\r\n      </button>\r\n      <Toggle checked={darkMode.value} onChange={darkMode.toggle} />\r\n      <button type=\"button\" onClick={darkMode.enable}>\r\n        ☾\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DarkModeToggle;\r\n","import React, { useState } from 'react';\r\nimport DarkModeToggle from 'components/DarkModeToggle';\r\nexport default function ToolBox() {\r\n  return (\r\n    <div className=\"tool-box\">\r\n      <div className=\"logo\">Welcome to my blog !!</div>\r\n      <div className=\"search-box\">\r\n        <div className=\"field has-addons\"></div>\r\n      </div>\r\n      <div to=\"/cart\" className=\"cart-box\">\r\n        <DarkModeToggle />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar.bd629eee.png\";","import React, { useEffect, useState } from 'react';\r\nimport Post from 'components/Post';\r\nimport { getAllPosts } from 'WebApi';\r\nimport ToolBox from 'components/ToolBox';\r\nimport avatar from '../images/avatar.png';\r\n\r\nexport default function Posts() {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  //從 api 拿資料\r\n  useEffect(() => {\r\n    getAllPosts().then((posts) => {\r\n      setPosts(posts);\r\n    });\r\n  }, [posts]);\r\n\r\n  return (\r\n    <>\r\n      <ToolBox />\r\n      <div className=\"article-container\">\r\n        <div className=\"article-logo\">\r\n          <div className=\"img\">\r\n            <img src={avatar} alt=\"Lidemy\" />\r\n          </div>\r\n          <h5>About</h5>\r\n          <div className=\"title\">Lidemy</div>\r\n          <p className=\"content\">\r\n            一個為初學者而生的線上程式課程平台\r\n            <a href=\"https://lidemy.com/\">https://lidemy.com/</a>\r\n          </p>\r\n        </div>\r\n        <div className=\"articles\">\r\n          {posts && posts.map((post) => <Post key={post.id} post={post} />)}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Layout from 'Layout';\r\nimport Posts from 'components/Posts';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Layout>\r\n      <Posts />\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport Layout from 'Layout';\r\nimport { login, getMe } from 'WebApi';\r\nimport { AuthContext } from 'Contexts';\r\nimport { setAuthToken } from 'utils';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function Login() {\r\n  const { setUser } = useContext(AuthContext);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState();\r\n  const history = useHistory();\r\n\r\n  const handleUserChange = (e) => {\r\n    const value = e.target.value;\r\n    setUsername(value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword('Lidemy');\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrorMessage(null);\r\n    login(username, password).then((data) => {\r\n      if (data.ok === 0) return setErrorMessage(data.message);\r\n      setAuthToken(data.token);\r\n      getMe().then((res) => {\r\n        if (res.ok !== 1) {\r\n          setAuthToken(null);\r\n          return setErrorMessage(res.toString());\r\n        } else {\r\n          setUser(res.data);\r\n          history.push('/');\r\n        }\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <Layout>\r\n      <div className=\"login-wrapper\">\r\n        <form className=\"box login-box\" onSubmit={handleSubmit}>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Username</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Text input\"\r\n                name=\"usename\"\r\n                value={username}\r\n                onChange={handleUserChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Password</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"password\"\r\n                placeholder=\"Text input\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"control\">\r\n            <button className=\"button is-fullwidth is-primary\">Login</button>\r\n          </div>\r\n          {errorMessage && <div className=\"errorMessage \">{errorMessage}</div>}\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport Layout from 'Layout';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getMe, register } from 'WebApi';\r\nimport { setAuthToken } from 'utils';\r\nimport { AuthContext } from 'Contexts';\r\n\r\nexport default function Register() {\r\n  const [nickname, setNickname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const history = useHistory();\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleNicknameChange = (e) => {\r\n    setNickname(e.target.value);\r\n  };\r\n  const handleUserChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n  const handlePasswordChange = (e) => {\r\n    setPassword('Lidemy');\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    register(nickname, username, password).then((data) => {\r\n      if (data.ok !== 1) {\r\n        setErrorMessage(data.message);\r\n      }\r\n      //token 存進 localstorage\r\n      setAuthToken(data.token);\r\n\r\n      //進行身分驗證\r\n      getMe().then((res) => {\r\n        if (res.ok !== 1) {\r\n          setErrorMessage(res.message);\r\n        } else {\r\n          setUser(res.data);\r\n          history.push('./login');\r\n        }\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <Layout>\r\n      <div className=\"login-wrapper\">\r\n        <form className=\"box login-box\" onSubmit={handleSubmit}>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Nickname</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Text input\"\r\n                name=\"nickname\"\r\n                value={nickname}\r\n                onChange={handleNicknameChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Username</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Text input\"\r\n                name=\"usename\"\r\n                value={username}\r\n                onChange={handleUserChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label className=\"label\">Password</label>\r\n            <div className=\"control\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"password\"\r\n                placeholder=\"Text input\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handlePasswordChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"control\">\r\n            <button className=\"button is-fullwidth is-primary\">Register</button>\r\n          </div>\r\n          {errorMessage && <div className=\"errorMessage \">{errorMessage}</div>}\r\n        </form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound(props) {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h2>Not Found Page</h2>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { editPost } from 'WebApi';\r\n\r\nexport default function EditModal({ isEdit, post, handleClose }) {\r\n  const [content, setContent] = useState('');\r\n  const history = useHistory();\r\n\r\n  const _class = {\r\n    true: 'modal block',\r\n    false: 'modal',\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    editPost(post.id, post.title, content).then((res) => {\r\n      handleClose();\r\n      history.push(`/posts/${res.id}`);\r\n    });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={_class[isEdit]}>\r\n        <div\r\n          className=\"modal-background\"\r\n          onClick={() => {\r\n            handleClose();\r\n          }}\r\n        ></div>\r\n        <div className=\"modal-card vertical-center\">\r\n          <header className=\"modal-card-head \">\r\n            <p className=\"modal-card-title title-flow\">Title: {post.title}</p>\r\n            <button\r\n              className=\"delete\"\r\n              aria-label=\"close\"\r\n              onClick={() => {\r\n                handleClose();\r\n              }}\r\n            ></button>\r\n          </header>\r\n          <textarea\r\n            className=\"modal-card-body text-height\"\r\n            onChange={handleChange}\r\n            defaultValue={post.body}\r\n          />\r\n\r\n          <footer className=\"modal-card-foot\">\r\n            <button className=\"button is-success\">Update</button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"button\"\r\n              onClick={() => {\r\n                handleClose();\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import Layout from 'Layout';\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { getPostInfo, deletePost } from 'WebApi';\r\nimport EditModal from 'components/EditModal';\r\nimport { AuthContext, LoadingContext } from 'Contexts';\r\nimport avatar from '../images/avatar.png';\r\n\r\nfunction Post({ post, slug, setIsLoading }) {\r\n  const { user } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n\r\n  const handleDelete = () => {\r\n    setIsLoading(true);\r\n    deletePost(slug);\r\n    setIsLoading(false);\r\n    history.push('/');\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"post-container\">\r\n        <div className=\"article\">\r\n          <div className=\"control\">\r\n            <div className=\"date\">\r\n              <h5>{new Date(post.createdAt).toLocaleString()}</h5>\r\n            </div>\r\n            {user && (\r\n              <div className=\"control-button\">\r\n                <button\r\n                  className=\"button is-danger\"\r\n                  type=\"button\"\r\n                  onClick={handleDelete}\r\n                >\r\n                  刪除\r\n                </button>\r\n                <button\r\n                  className=\"button is-primary\"\r\n                  type=\"button\"\r\n                  onClick={handleEdit}\r\n                >\r\n                  編輯\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <h1 className=\"title\">{post.title}</h1>\r\n          <p className=\"content\">{post.body}</p>\r\n          {isEdit && (\r\n            <EditModal isEdit={isEdit} handleClose={handleClose} post={post} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function PostPage() {\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\r\n  const [post, setPost] = useState([]);\r\n\r\n  let { slug } = useParams();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getPostInfo(slug).then((post) => setPost(post));\r\n    setIsLoading(false);\r\n  }, [slug, setIsLoading, post]);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"article-container\">\r\n        <div className=\"article-logo\">\r\n          <div className=\"img\">\r\n            <img src={avatar} alt=\"Lidemy\" />\r\n          </div>\r\n          <h5>About</h5>\r\n          <div className=\"title\">Lidemy</div>\r\n          <p className=\"content\">\r\n            一個為初學者而生的線上程式課程平台\r\n            <a href=\"https://lidemy.com/\">https://lidemy.com/</a>\r\n          </p>\r\n        </div>\r\n        <div className=\"articles\">\r\n          <Post\r\n            post={post}\r\n            key={post.id}\r\n            slug={slug}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport App from 'components/App';\r\nimport Login from 'pages/Login';\r\nimport Register from 'pages/Register';\r\nimport NotFound from 'pages/Notfound';\r\nimport PostPage from 'pages/PostPage';\r\nimport { AuthContext, LoadingContext } from 'Contexts';\r\nimport { getMe } from 'WebApi';\r\nimport { getAuthToken } from 'utils';\r\n\r\nexport default function Routers() {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    if (getAuthToken()) {\r\n      getMe().then((res) => {\r\n        if (res.ok) {\r\n          setUser(res.data);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      <Router>\r\n        <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\r\n          <Switch>\r\n            <Route path=\"/\" component={App} exact />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/posts/:slug\" component={PostPage} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </LoadingContext.Provider>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport './css/app.scss';\nimport './css/style.scss';\nimport Routers from 'Routers';\nReactDOM.render(\n  <React.StrictMode>\n    <Routers />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}